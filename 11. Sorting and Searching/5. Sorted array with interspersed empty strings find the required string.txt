arr=["at","","","","ball","","","car","","","dad","",""]
######################################################################
#solution 1
def binsearch(arr,i,j,val):
	if i>j:
		return -1
	mid=(i+j)/2
	if arr[mid]==val:
		return mid
	r=mid-1
	while r>=i and arr[r]=="":
		r-=1
	
	if r!=i-1:
		if arr[r]==val:
			return r
		if arr[r]>val:
			return binsearch(arr,i,r-1,val)

	l=mid+1
	while l<=j and arr[l]=="":
		l+=1
	if l!=j+1:
		if arr[l]==val:
			return l
		if arr[l]<val:
			return binsearch(arr,l+1,j,val)	
	  
	return -1
print binsearch(arr,0,len(arr)-1,"dad")


########################################################################
#solution 2
def search(arr,i,j,val):
  if i>j:
	return -1
  mid=(i+j)/2
  if arr[mid]=="":
		
	l=mid-1
	r=mid+1
	while l>=i or r<=j:
		if l>=i and arr[l]!="":
			mid=l
			break
		if r<=j and arr[r]!="":
			mid=r
			break
		l-=1
		r-=1
  if mid==(l+r)/2:
	return -1
  if arr[mid]==val:
	return mid
  if arr[mid]>val:
	return search(arr,i,mid-1,val)
  return search(arr,mid+1,j,val)

print search(arr,0,len(arr)-1,"dad")
